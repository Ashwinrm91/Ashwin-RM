Cucumber BDD Framework --- Restappured API Automation

Features of Framework:

Frameworke created in a such a way where feature line in the feature file is mapped to the Java methods using Gherkin keyword.

This framework can be understandable even by the non technical person. This can be extended to UI automation, Fetching DB data and providing excellent reports.

Each feature file is annotated with Cucumber tags we run whichever test we want just by placing the tag in runner class

***************************************
How to run the framework?

Clone the project from Git Hub --> Import it to any IDE --> Go to Runner Package src/main/java -- TestRunner.java --> Right click then Run as Junit

****************************************
Framework structure 

Runner package
Src/main/java - Where runner class is stored we can give the tags and path of the feature file which we want to run

Step Def Package
Src/main/java - Where the API methods written for Post, Put, Get and Delete for Pet, Store and User

Utils

Src/main/Utils - Where Class for reading a propery is created which is extended different class

Feature file

Src/test/java/Feature - Where feature files are stored for different API methods

SRC

Property file is stored having common URL

Test output - Basic extenst report

Pom.xml - Where all maven dependencies are stored

****************************************
Scenarios covered

Pet -- Post, Put, Get, Delete
Store -- Post, Put, Get, Delete
User -- Post, Put, Get, Delete

Both postive and negative scenarios are covered using Assert

Pros - Easy to get the data with all the api methos in fraction of seconds. 
Cons - I don't find any cons

****************************************


